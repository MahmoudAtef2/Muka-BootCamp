onfiguration Commands
- git config --global user.name "Your Name"
  Sets the name that will be used for commits globally.
  
- git config --global user.email "you@example.com"
  Sets the email address for commits globally.

2. Basic Workflow Commands
- git init
  Initializes a new Git repository in your current directory.
  
- git clone <repository-url>
  Clones an existing repository from GitHub to your local machine.

- git add <file>
  Adds a specific file to the staging area, preparing it for a commit.
  
- git add .
  Adds all modified or new files to the staging area.

- git commit -m "commit message"
  Commits the staged changes to the repository with a descriptive message.

- git push origin <branch>
  Pushes your committed changes to a remote repository (GitHub) on the specified branch.

- git pull origin <branch>
  Pulls the latest changes from the remote repository and merges them into your local branch.

3. Branching Commands
- git branch
  Lists all the local branches in your repository.
  
- git branch <branch-name>
  Creates a new branch from the current branch.

- git checkout <branch-name>
  Switches to a different branch.

- git checkout -b <branch-name>
  Creates a new branch and switches to it immediately.

- git merge <branch>
  Merges changes from the specified branch into your current branch.

- git branch -d <branch-name>
  Deletes a local branch (if fully merged).

4. Stashing Commands
- git stash
  Saves your uncommitted changes and clears the working directory.
  
- git stash pop
  Restores the stashed changes back to your working directory.

5. Viewing Status & History
- git status
  Shows the status of changes in the working directory and staging area.

- git log
  Displays the commit history of the repository.

- git log --oneline
  Displays the commit history with one commit per line.

6. Undo Changes
- git reset <file>
  Removes a file from the staging area (but keeps the changes locally).
  
- git reset --hard <commit>
  Resets the working directory and staging area to a specific commit, discarding all changes.

- git revert <commit>
  Reverts a specific commit by creating a new commit that undoes the changes of the specified commit.

7. Tagging
- git tag <tag-name>
  Creates a tag for a specific commit.

- git push origin <tag-name>
  Pushes the specified tag to the remote repository.

8. Remote Repository Management
- git remote -v
  Displays the URLs of the remote repositories.

- git remote add origin <repository-url>
  Links a local repository to a remote one on GitHub.

- git fetch origin
  Fetches changes from the remote repository but does not merge them.

9. Collaborative Commands
- git fork
  Creates a copy of another userâ€™s repository on GitHub.

- git pull-request
  Creates a pull request for collaborative contributions (GitHub specific).

10. Rebasing
- git rebase <branch>
  Reapplies commits from your current branch on top of another branch.

